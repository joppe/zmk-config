/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        left_mo_1 {
            bindings = <&mo 2>;
            key-positions = <13 14>;
        };

        right_mo_1 {
            bindings = <&mo 1>;
            key-positions = <22 21>;
        };

        left_mo_2 {
            bindings = <&mo 4>;
            key-positions = <16 15>;
        };

        right_mo_2 {
            bindings = <&mo 3>;
            key-positions = <19 20>;
        };

        fn_left {
            bindings = <&mo 5>;
            key-positions = <4 3>;
        };

        fn_right {
            bindings = <&mo 5>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E           &kp R         &kp T        &kp Y      &kp U          &kp I            &kp O    &kp P     &kp BSPC
&kp LCTRL     &kp A  &kp S  &kp D           &kp F         &kp G        &kp H      &kp J          &kp K            &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C           &kp V         &kp B        &kp N      &kp M          &kp COMMA        &kp DOT  &kp FSLH  &kp ESC
                            &kp LEFT_SHIFT  &kp LEFT_GUI  &kp SPACE    &kp ENTER  &kp BACKSPACE  &kp RIGHT_SHIFT
            >;
        };

        lower_left {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp EXCLAMATION  &kp AT           &kp HASH         &kp DOLLAR       &kp PERCENT         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE        &kp MINUS        &kp SLASH        &kp LEFT_BRACE   &kp LEFT_BRACKET    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans           &trans           &trans              &trans  &trans  &trans
            >;
        };

        lower_right {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_6    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9       &kp KP_N0              &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans    &kp CARET          &kp AMPS         &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp PLUS         &kp EQUAL             &kp MINUS              &kp GRAVE
                        &trans  &trans  &trans    &trans             &trans           &trans
            >;
        };

        raise_left {
            bindings = <
&trans  &trans          &kp UP    &trans     &trans  &kp C_VOLUME_UP      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &trans  &kp C_MUTE           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans    &trans     &trans  &kp C_VOLUME_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans     &trans  &trans               &trans  &trans  &trans
            >;
        };

        raise_right {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        fn {
            bindings = <
&kp F1           &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans           &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&rgb_ug RGB_TOG  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                                 &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
